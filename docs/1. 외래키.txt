Foreign key

1) 1:N models.ForeignKey
ex) 1명의 유저가 쓰는 다수의 포스팅, 1명의 유저가 쓰는 다수의 댓글
- N에서 관계 명시
- models.ForeignKey(대상모델, on_delete)
- on_delete:
	cascade: 참조 하는 모델의 리코드도 삭제
	그 밖에 PROTECT, SET_NULL, SET_DEFAULT, SET, DO_NOTHING 등이 있음
	
다만 reverse_name의 경우 앱이름은 고려하지 않고 모델명만 고려하기 때문에
이름 충돌 발생할 수 있음.
이 때 related_name을 통해 한쪽의 reverse_name을 포기하거나 reversename 변경하는것을 권장


2) 1:1 models.OneToOneField
ex) 1명의 유저에는 1개의 프로필
- models.ForeignKey(대상모델, on_delete)


3) M:N models.ManyToManyField
ex) 1개의 게시글 다수의 태그, 1개의 태그에는 다수의 게시글
- models.ManyToManyField(대상모델, blank 여부)
- M,N 어느쪽에서 선언할 수 있으나 사용하는 쪽에서 선언하는 것, 또는 참조가 덜 되는 쪽에서 선언하는 것이 적합하다.
ex) 태그의 경우 Post, Article 등 다양한 곳에서 사용되므로 Post, Article 에서 선언하는 것이 좋음.
tag_set = models. ManyToManyField(‘Tag’, blank= True)
manytomany 관계의 경우 테이블 두개로는 정의하기 힘들기 때문에 중간 테이블이 생성된다.
